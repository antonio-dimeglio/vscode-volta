{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Volta",
  "scopeName": "source.volta",
  "patterns": [
    { "include": "#comments" },        
    { "include": "#strings" },         
    { "include": "#function-types" },  
    { "include": "#generic-types" },   
    { "include": "#type-annotations" },
    { "include": "#keywords" },        
    { "include": "#types" },           
    { "include": "#booleans" },        
    { "include": "#numbers" },         
    { "include": "#operators" },       
    { "include": "#delimiters" }       
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.volta",
          "match": "\\b(fn|return|if|else|while|for|in|match|struct|enum|let|mut|import|and|or|not|break|continue)\\b"
        }
      ]
    },
    "types" : {
      "patterns": [
        {
          "name" : "storage.type.volta",
          "match" : "\\b(i8|i16|i32|i64|u8|u16|u32|u64|f16|f32|f64|f8|bool|str|Array|Option|int|float)\\b"
        }
      ]
    },
    "booleans": {
      "patterns": [
        {
          "name": "constant.language.boolean.volta",
          "match": "\\b(true|false)\\b"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.float.volta",
          "match": "\\b\\d+\\.\\d+([eE][+-]?\\d+)?\\b"
        },
        {
          "name": "constant.numeric.integer.volta",
          "match": "\\b\\d+([eE][+-]?\\d+)?\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.volta",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.volta",
          "match": "\\\\."
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.block.documentation.volta",
          "begin": "#\\[doc\\]",
          "end": "#\\[/doc\\]",
          "patterns": [
            {
              "name": "storage.type.class.doxygen.volta",
              "match": "@(param|returns|field|example|throws)\\b"
            },
            {
              "name": "variable.parameter.volta",
              "match": "(?<=@param)\\s+\\w+"
            }
          ]
        },
        {
          "name": "comment.block.volta",
          "begin": "#\\[",
          "end": "\\]#"
        },
        {
          "name": "comment.line.volta",
          "match": "#.*$"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.volta",
          "match": "\\+|\\-|\\*|/|%|\\*\\*|==|!=|<=|>=|<|>|=|\\+=|\\-=|\\*=|/=|:=|\\.\\.|\\.\\.="
        }
      ]
    },
    "delimiters": {
      "patterns": [
        {
          "name": "punctuation.bracket.volta",
          "match": "[\\(\\)\\[\\]\\{\\}]"
        },
        {
          "name": "punctuation.separator.volta",
          "match": "[:,;\\.]"
        },
        {
          "name": "punctuation.arrow.volta",
          "match": "->|=>"
        }
      ]
    },
    "function-types": {
      "patterns": [
        {
          "begin": "\\b(fn)\\s*(\\()",
          "end": "(\\))\\s*(->)\\s*(\\w+)",
          "beginCaptures": {
            "1": { "name": "keyword.control.volta" },
            "2": { "name": "punctuation.bracket.volta" }
          },
          "endCaptures": {
            "1": { "name": "punctuation.bracket.volta" },
            "2": { "name": "punctuation.arrow.volta" },
            "3": { "name": "storage.type.volta" }
          },
          "patterns": [
            { "include": "#types" },
            {
              "name": "punctuation.separator.volta",
              "match": ","
            }
          ]
        }
      ]
    },
  "type-annotations": {
    "patterns": [
          {
            "match": ":\\s*(mut\\s+)?(\\w+)",
            "captures": {
              "1": { "name": "keyword.control.volta" },
              "2": { "name": "storage.type.volta" }
            }
          }
      ]
    }
  },
  "generic-types": {
    "begin": "(\\w+)(\\[)",
    "end": "\\]",
    "beginCaptures": {
        "1": { "name": "storage.type.volta" },
        "2": { "name": "punctuation.bracket.volta" }
      },
    "endCaptures": {
        "0": { "name": "punctuation.bracket.volta" }
      },
    "patterns": [
        { "include": "#types" }
      ]
  }
}
